package sy.model.base;
// Generated 2016-5-1 13:55:52 by Hibernate Tools 3.2.2.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import java.util.UUID;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.apache.commons.lang3.StringUtils;
import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;

/**
 * ActivityUser generated by hbm2java
 */
@Entity
@Table(name = "activityUser", catalog = "sshe")
@DynamicInsert(true)
@DynamicUpdate(true)
public class ActivityUser implements java.io.Serializable {

	private String id;
	private String name;
	private Integer sex;
	private String phone;
	private String headurl;
	private String nickname;
	private Date createdatetime;
	private Date lastlogindatetime;
	private String role;
	private Set<Record> records = new HashSet<Record>(0);

	public ActivityUser() {
	}

	public ActivityUser(String id) {
		this.id = id;
	}

	public ActivityUser(String id, String name, Integer sex, String phone, String headurl, String nickname,
			Date createdatetime, Date lastlogindatetime, String role, Set<Record> records) {
		this.id = id;
		this.name = name;
		this.sex = sex;
		this.phone = phone;
		this.headurl = headurl;
		this.nickname = nickname;
		this.createdatetime = createdatetime;
		this.lastlogindatetime = lastlogindatetime;
		this.role = role;
		this.records = records;
	}

	
	
	@Id
	@Column(name = "ID", unique = true, nullable = false, length = 36)
	public String getId() {
		if (!StringUtils.isBlank(this.id)) {
			return this.id;
		}
		return UUID.randomUUID().toString();
	}

	public void setId(String id) {
		this.id = id;
	}

//	@Id
//
//	@Column(name = "id", unique = true, nullable = false)
//	public String getId() {
//		return this.id;
//	}
//
//	public void setId(String id) {
//		this.id = id;
//	}

	@Column(name = "name", length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "sex")
	public Integer getSex() {
		return this.sex;
	}

	public void setSex(Integer sex) {
		this.sex = sex;
	}

	@Column(name = "phone", length = 30)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "headurl", length = 500)
	public String getHeadurl() {
		return this.headurl;
	}

	public void setHeadurl(String headurl) {
		this.headurl = headurl;
	}

	@Column(name = "nickname", length = 100)
	public String getNickname() {
		return this.nickname;
	}

	public void setNickname(String nickname) {
		this.nickname = nickname;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createdatetime", length = 19)
	public Date getCreatedatetime() {
		if (this.createdatetime != null)
			return this.createdatetime;
		return new Date();
	}

	public void setCreatedatetime(Date createdatetime) {
		this.createdatetime = createdatetime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "lastlogindatetime", length = 19)
	public Date getLastlogindatetime() {
		return this.lastlogindatetime;
	}

	public void setLastlogindatetime(Date lastlogindatetime) {
		this.lastlogindatetime = lastlogindatetime;
	}

	@Column(name = "role", length = 30)
	public String getRole() {
		return this.role;
	}

	public void setRole(String role) {
		this.role = role;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "activityUser")
	public Set<Record> getRecords() {
		return this.records;
	}

	public void setRecords(Set<Record> records) {
		this.records = records;
	}

}
