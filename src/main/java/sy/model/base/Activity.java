package sy.model.base;
// Generated 2016-5-1 13:55:52 by Hibernate Tools 3.2.2.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import java.util.UUID;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.apache.commons.lang3.StringUtils;

/**
 * Activity generated by hbm2java
 */
@Entity
@Table(name = "activity", catalog = "sshe")
public class Activity implements java.io.Serializable {

	private String id;
	private String name;
	private String url;
	private Date createdatetime;
	private Set<Record> records = new HashSet<Record>(0);

	public Activity() {
	}

	public Activity(String id) {
		this.id = id;
	}

	public Activity(String id, String name, String url, Date createdatetime, Set<Record> records) {
		this.id = id;
		this.name = name;
		this.url = url;
		this.createdatetime = createdatetime;
		this.records = records;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false,length = 36)
	public String getId() {
		if (!StringUtils.isBlank(this.id)) {
			return this.id;
		}
		return UUID.randomUUID().toString();
	}

	public void setId(String id) {
		this.id = id;
	}

	@Column(name = "name", length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "url", length = 100)
	public String getUrl() {
		return this.url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createdatetime", length = 19)
	public Date getCreatedatetime() {
		if (this.createdatetime != null)
			return this.createdatetime;
		return new Date();
	}

	public void setCreatedatetime(Date createdatetime) {
		this.createdatetime = createdatetime;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "activity")
	public Set<Record> getRecords() {
		return this.records;
	}

	public void setRecords(Set<Record> records) {
		this.records = records;
	}

}
